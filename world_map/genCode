char * AF_name = strdup("Afghanistan");
char * AL_name = strdup("Albania");
char * DZ_name = strdup("Algeria");
char * AD_name = strdup("Andorra");
char * AO_name = strdup("Angola");
char * AR_name = strdup("Argentina");
char * AM_name = strdup("Armenia");
char * AT_name = strdup("Austria");
char * AZ_name = strdup("Azerbaijan");
char * BD_name = strdup("Bangladesh");
char * BY_name = strdup("Belarus");
char * BE_name = strdup("Belgium");
char * BZ_name = strdup("Belize");
char * BJ_name = strdup("Benin");
char * BT_name = strdup("Bhutan");
char * BO_name = strdup("Bolivia (Plurinational State of)");
char * BA_name = strdup("Bosnia and Herzegovina");
char * BW_name = strdup("Botswana");
char * BR_name = strdup("Brazil");
char * BN_name = strdup("Brunei Darussalam");
char * BG_name = strdup("Bulgaria");
char * BF_name = strdup("Burkina Faso");
char * BI_name = strdup("Burundi");
char * KH_name = strdup("Cambodia");
char * CM_name = strdup("Cameroon");
char * CA_name = strdup("Canada");
char * CF_name = strdup("Central African Republic");
char * TD_name = strdup("Chad");
char * CL_name = strdup("Chile");
char * CN_name = strdup("China");
char * CO_name = strdup("Colombia");
char * CG_name = strdup("Congo");
char * CD_name = strdup("Democratic Republic of Congo");
char * CR_name = strdup("Costa Rica");
char * CI_name = strdup("Cote d'Ivoire");
char * HR_name = strdup("Croatia");
char * CZ_name = strdup("Czechia");
char * DK_name = strdup("Denmark");
char * DJ_name = strdup("Djibouti");
char * DO_name = strdup("Dominican Republic");
char * EC_name = strdup("Ecuador");
char * EG_name = strdup("Egypt");
char * SV_name = strdup("El Salvador");
char * GQ_name = strdup("Equatorial Guinea");
char * ER_name = strdup("Eritrea");
char * EE_name = strdup("Estonia");
char * SZ_name = strdup("Eswatini");
char * ET_name = strdup("Ethiopia");
char * FI_name = strdup("Finland");
char * FR_name = strdup("France");
char * GF_name = strdup("French Guiana");
char * GA_name = strdup("Gabon");
char * GM_name = strdup("Gambia");
char * GE_name = strdup("Georgia");
char * DE_name = strdup("Germany");
char * GH_name = strdup("Ghana");
char * GI_name = strdup("Gibraltar");
char * GR_name = strdup("Greece");
char * GT_name = strdup("Guatemala");
char * GN_name = strdup("Guinea");
char * GW_name = strdup("Guinea-Bissau");
char * GY_name = strdup("Guyana");
char * HT_name = strdup("Haiti");
char * VA_name = strdup("Holy See");
char * HN_name = strdup("Honduras");
char * HK_name = strdup("Hong Kong");
char * HU_name = strdup("Hungary");
char * IN_name = strdup("India");
char * ID_name = strdup("Indonesia");
char * IR_name = strdup("Iran");
char * IQ_name = strdup("Iraq");
char * IE_name = strdup("Ireland");
char * IL_name = strdup("Israel");
char * IT_name = strdup("Italy");
char * JO_name = strdup("Jordan");
char * KZ_name = strdup("Kazakhstan");
char * KE_name = strdup("Kenya");
char * KP_name = strdup("North Korea");
char * KR_name = strdup("Republic of Korea");
char * KW_name = strdup("Kuwait");
char * KG_name = strdup("Kyrgyzstan");
char * LA_name = strdup("Lao People's Democratic Republic");
char * LV_name = strdup("Latvia");
char * LB_name = strdup("Lebanon");
char * LS_name = strdup("Lesotho");
char * LR_name = strdup("Liberia");
char * LY_name = strdup("Libya");
char * LI_name = strdup("Liechtenstein");
char * LT_name = strdup("Lithuania");
char * LU_name = strdup("Luxembourg");
char * MO_name = strdup("Macao");
char * MW_name = strdup("Malawi");
char * MY_name = strdup("Malaysia");
char * ML_name = strdup("Mali");
char * MR_name = strdup("Mauritania");
char * MX_name = strdup("Mexico");
char * MD_name = strdup("Moldova");
char * MC_name = strdup("Monaco");
char * MN_name = strdup("Mongolia");
char * ME_name = strdup("Montenegro");
char * MA_name = strdup("Morocco");
char * MZ_name = strdup("Mozambique");
char * MM_name = strdup("Myanmar");
char * NA_name = strdup("Namibia");
char * NP_name = strdup("Nepal");
char * NL_name = strdup("Netherlands");
char * NI_name = strdup("Nicaragua");
char * NE_name = strdup("Niger");
char * NG_name = strdup("Nigeria");
char * MK_name = strdup("North Macedonia");
char * NO_name = strdup("Norway");
char * OM_name = strdup("Oman");
char * PK_name = strdup("Pakistan");
char * PS_name = strdup("Palestine");
char * PA_name = strdup("Panama");
char * PG_name = strdup("Papua New Guinea");
char * PY_name = strdup("Paraguay");
char * PE_name = strdup("Peru");
char * PL_name = strdup("Poland");
char * PT_name = strdup("Portugal");
char * QA_name = strdup("Qatar");
char * RO_name = strdup("Romania");
char * RU_name = strdup("Russian Federation");
char * RW_name = strdup("Rwanda");
char * MF_name = strdup("Saint Martin (French part)");
char * SM_name = strdup("San Marino");
char * SA_name = strdup("Saudi Arabia");
char * SN_name = strdup("Senegal");
char * RS_name = strdup("Serbia");
char * SL_name = strdup("Sierra Leone");
char * SX_name = strdup("Sint Maarten (Dutch part)");
char * SK_name = strdup("Slovakia");
char * SI_name = strdup("Slovenia");
char * SO_name = strdup("Somalia");
char * ZA_name = strdup("South Africa");
char * SS_name = strdup("South Sudan");
char * ES_name = strdup("Spain");
char * SD_name = strdup("Sudan");
char * SR_name = strdup("Suriname");
char * SE_name = strdup("Sweden");
char * CH_name = strdup("Switzerland");
char * SY_name = strdup("Syrian Arab Republic");
char * TW_name = strdup("Taiwan");
char * TJ_name = strdup("Tajikistan");
char * TZ_name = strdup("Tanzania");
char * TH_name = strdup("Thailand");
char * TL_name = strdup("Timor-Leste");
char * TG_name = strdup("Togo");
char * TN_name = strdup("Tunisia");
char * TR_name = strdup("Turkey");
char * TM_name = strdup("Turkmenistan");
char * UG_name = strdup("Uganda");
char * UA_name = strdup("Ukraine");
char * AE_name = strdup("United Arab Emirates");
char * GB_name = strdup("United Kingdom of Great Britain and Northern Ireland");
char * US_name = strdup("United States of America");
char * UM_name = strdup("United States Minor Outlying Islands");
char * UY_name = strdup("Uruguay");
char * UZ_name = strdup("Uzbekistan");
char * VE_name = strdup("Venezuela (Bolivarian Republic of)");
char * VN_name = strdup("Viet Nam");
char * EH_name = strdup("Western Sahara");
char * YE_name = strdup("Yemen");
char * ZM_name = strdup("Zambia");
char * ZW_name = strdup("Zimbabwe");
char * AF_alpha2 = strdup("AF");
char * AL_alpha2 = strdup("AL");
char * DZ_alpha2 = strdup("DZ");
char * AD_alpha2 = strdup("AD");
char * AO_alpha2 = strdup("AO");
char * AR_alpha2 = strdup("AR");
char * AM_alpha2 = strdup("AM");
char * AT_alpha2 = strdup("AT");
char * AZ_alpha2 = strdup("AZ");
char * BD_alpha2 = strdup("BD");
char * BY_alpha2 = strdup("BY");
char * BE_alpha2 = strdup("BE");
char * BZ_alpha2 = strdup("BZ");
char * BJ_alpha2 = strdup("BJ");
char * BT_alpha2 = strdup("BT");
char * BO_alpha2 = strdup("BO");
char * BA_alpha2 = strdup("BA");
char * BW_alpha2 = strdup("BW");
char * BR_alpha2 = strdup("BR");
char * BN_alpha2 = strdup("BN");
char * BG_alpha2 = strdup("BG");
char * BF_alpha2 = strdup("BF");
char * BI_alpha2 = strdup("BI");
char * KH_alpha2 = strdup("KH");
char * CM_alpha2 = strdup("CM");
char * CA_alpha2 = strdup("CA");
char * CF_alpha2 = strdup("CF");
char * TD_alpha2 = strdup("TD");
char * CL_alpha2 = strdup("CL");
char * CN_alpha2 = strdup("CN");
char * CO_alpha2 = strdup("CO");
char * CG_alpha2 = strdup("CG");
char * CD_alpha2 = strdup("CD");
char * CR_alpha2 = strdup("CR");
char * CI_alpha2 = strdup("CI");
char * HR_alpha2 = strdup("HR");
char * CZ_alpha2 = strdup("CZ");
char * DK_alpha2 = strdup("DK");
char * DJ_alpha2 = strdup("DJ");
char * DO_alpha2 = strdup("DO");
char * EC_alpha2 = strdup("EC");
char * EG_alpha2 = strdup("EG");
char * SV_alpha2 = strdup("SV");
char * GQ_alpha2 = strdup("GQ");
char * ER_alpha2 = strdup("ER");
char * EE_alpha2 = strdup("EE");
char * SZ_alpha2 = strdup("SZ");
char * ET_alpha2 = strdup("ET");
char * FI_alpha2 = strdup("FI");
char * FR_alpha2 = strdup("FR");
char * GF_alpha2 = strdup("GF");
char * GA_alpha2 = strdup("GA");
char * GM_alpha2 = strdup("GM");
char * GE_alpha2 = strdup("GE");
char * DE_alpha2 = strdup("DE");
char * GH_alpha2 = strdup("GH");
char * GI_alpha2 = strdup("GI");
char * GR_alpha2 = strdup("GR");
char * GT_alpha2 = strdup("GT");
char * GN_alpha2 = strdup("GN");
char * GW_alpha2 = strdup("GW");
char * GY_alpha2 = strdup("GY");
char * HT_alpha2 = strdup("HT");
char * VA_alpha2 = strdup("VA");
char * HN_alpha2 = strdup("HN");
char * HK_alpha2 = strdup("HK");
char * HU_alpha2 = strdup("HU");
char * IN_alpha2 = strdup("IN");
char * ID_alpha2 = strdup("ID");
char * IR_alpha2 = strdup("IR");
char * IQ_alpha2 = strdup("IQ");
char * IE_alpha2 = strdup("IE");
char * IL_alpha2 = strdup("IL");
char * IT_alpha2 = strdup("IT");
char * JO_alpha2 = strdup("JO");
char * KZ_alpha2 = strdup("KZ");
char * KE_alpha2 = strdup("KE");
char * KP_alpha2 = strdup("KP");
char * KR_alpha2 = strdup("KR");
char * KW_alpha2 = strdup("KW");
char * KG_alpha2 = strdup("KG");
char * LA_alpha2 = strdup("LA");
char * LV_alpha2 = strdup("LV");
char * LB_alpha2 = strdup("LB");
char * LS_alpha2 = strdup("LS");
char * LR_alpha2 = strdup("LR");
char * LY_alpha2 = strdup("LY");
char * LI_alpha2 = strdup("LI");
char * LT_alpha2 = strdup("LT");
char * LU_alpha2 = strdup("LU");
char * MO_alpha2 = strdup("MO");
char * MW_alpha2 = strdup("MW");
char * MY_alpha2 = strdup("MY");
char * ML_alpha2 = strdup("ML");
char * MR_alpha2 = strdup("MR");
char * MX_alpha2 = strdup("MX");
char * MD_alpha2 = strdup("MD");
char * MC_alpha2 = strdup("MC");
char * MN_alpha2 = strdup("MN");
char * ME_alpha2 = strdup("ME");
char * MA_alpha2 = strdup("MA");
char * MZ_alpha2 = strdup("MZ");
char * MM_alpha2 = strdup("MM");
char * NA_alpha2 = strdup("NA");
char * NP_alpha2 = strdup("NP");
char * NL_alpha2 = strdup("NL");
char * NI_alpha2 = strdup("NI");
char * NE_alpha2 = strdup("NE");
char * NG_alpha2 = strdup("NG");
char * MK_alpha2 = strdup("MK");
char * NO_alpha2 = strdup("NO");
char * OM_alpha2 = strdup("OM");
char * PK_alpha2 = strdup("PK");
char * PS_alpha2 = strdup("PS");
char * PA_alpha2 = strdup("PA");
char * PG_alpha2 = strdup("PG");
char * PY_alpha2 = strdup("PY");
char * PE_alpha2 = strdup("PE");
char * PL_alpha2 = strdup("PL");
char * PT_alpha2 = strdup("PT");
char * QA_alpha2 = strdup("QA");
char * RO_alpha2 = strdup("RO");
char * RU_alpha2 = strdup("RU");
char * RW_alpha2 = strdup("RW");
char * MF_alpha2 = strdup("MF");
char * SM_alpha2 = strdup("SM");
char * SA_alpha2 = strdup("SA");
char * SN_alpha2 = strdup("SN");
char * RS_alpha2 = strdup("RS");
char * SL_alpha2 = strdup("SL");
char * SX_alpha2 = strdup("SX");
char * SK_alpha2 = strdup("SK");
char * SI_alpha2 = strdup("SI");
char * SO_alpha2 = strdup("SO");
char * ZA_alpha2 = strdup("ZA");
char * SS_alpha2 = strdup("SS");
char * ES_alpha2 = strdup("ES");
char * SD_alpha2 = strdup("SD");
char * SR_alpha2 = strdup("SR");
char * SE_alpha2 = strdup("SE");
char * CH_alpha2 = strdup("CH");
char * SY_alpha2 = strdup("SY");
char * TW_alpha2 = strdup("TW");
char * TJ_alpha2 = strdup("TJ");
char * TZ_alpha2 = strdup("TZ");
char * TH_alpha2 = strdup("TH");
char * TL_alpha2 = strdup("TL");
char * TG_alpha2 = strdup("TG");
char * TN_alpha2 = strdup("TN");
char * TR_alpha2 = strdup("TR");
char * TM_alpha2 = strdup("TM");
char * UG_alpha2 = strdup("UG");
char * UA_alpha2 = strdup("UA");
char * AE_alpha2 = strdup("AE");
char * GB_alpha2 = strdup("GB");
char * US_alpha2 = strdup("US");
char * UM_alpha2 = strdup("UM");
char * UY_alpha2 = strdup("UY");
char * UZ_alpha2 = strdup("UZ");
char * VE_alpha2 = strdup("VE");
char * VN_alpha2 = strdup("VN");
char * EH_alpha2 = strdup("EH");
char * YE_alpha2 = strdup("YE");
char * ZM_alpha2 = strdup("ZM");
char * ZW_alpha2 = strdup("ZW");
dictionary_insert(alpha2_to_name, AF_alpha2, AF_name);
dictionary_insert(alpha2_to_name, AL_alpha2, AL_name);
dictionary_insert(alpha2_to_name, DZ_alpha2, DZ_name);
dictionary_insert(alpha2_to_name, AD_alpha2, AD_name);
dictionary_insert(alpha2_to_name, AO_alpha2, AO_name);
dictionary_insert(alpha2_to_name, AR_alpha2, AR_name);
dictionary_insert(alpha2_to_name, AM_alpha2, AM_name);
dictionary_insert(alpha2_to_name, AT_alpha2, AT_name);
dictionary_insert(alpha2_to_name, AZ_alpha2, AZ_name);
dictionary_insert(alpha2_to_name, BD_alpha2, BD_name);
dictionary_insert(alpha2_to_name, BY_alpha2, BY_name);
dictionary_insert(alpha2_to_name, BE_alpha2, BE_name);
dictionary_insert(alpha2_to_name, BZ_alpha2, BZ_name);
dictionary_insert(alpha2_to_name, BJ_alpha2, BJ_name);
dictionary_insert(alpha2_to_name, BT_alpha2, BT_name);
dictionary_insert(alpha2_to_name, BO_alpha2, BO_name);
dictionary_insert(alpha2_to_name, BA_alpha2, BA_name);
dictionary_insert(alpha2_to_name, BW_alpha2, BW_name);
dictionary_insert(alpha2_to_name, BR_alpha2, BR_name);
dictionary_insert(alpha2_to_name, BN_alpha2, BN_name);
dictionary_insert(alpha2_to_name, BG_alpha2, BG_name);
dictionary_insert(alpha2_to_name, BF_alpha2, BF_name);
dictionary_insert(alpha2_to_name, BI_alpha2, BI_name);
dictionary_insert(alpha2_to_name, KH_alpha2, KH_name);
dictionary_insert(alpha2_to_name, CM_alpha2, CM_name);
dictionary_insert(alpha2_to_name, CA_alpha2, CA_name);
dictionary_insert(alpha2_to_name, CF_alpha2, CF_name);
dictionary_insert(alpha2_to_name, TD_alpha2, TD_name);
dictionary_insert(alpha2_to_name, CL_alpha2, CL_name);
dictionary_insert(alpha2_to_name, CN_alpha2, CN_name);
dictionary_insert(alpha2_to_name, CO_alpha2, CO_name);
dictionary_insert(alpha2_to_name, CG_alpha2, CG_name);
dictionary_insert(alpha2_to_name, CD_alpha2, CD_name);
dictionary_insert(alpha2_to_name, CR_alpha2, CR_name);
dictionary_insert(alpha2_to_name, CI_alpha2, CI_name);
dictionary_insert(alpha2_to_name, HR_alpha2, HR_name);
dictionary_insert(alpha2_to_name, CZ_alpha2, CZ_name);
dictionary_insert(alpha2_to_name, DK_alpha2, DK_name);
dictionary_insert(alpha2_to_name, DJ_alpha2, DJ_name);
dictionary_insert(alpha2_to_name, DO_alpha2, DO_name);
dictionary_insert(alpha2_to_name, EC_alpha2, EC_name);
dictionary_insert(alpha2_to_name, EG_alpha2, EG_name);
dictionary_insert(alpha2_to_name, SV_alpha2, SV_name);
dictionary_insert(alpha2_to_name, GQ_alpha2, GQ_name);
dictionary_insert(alpha2_to_name, ER_alpha2, ER_name);
dictionary_insert(alpha2_to_name, EE_alpha2, EE_name);
dictionary_insert(alpha2_to_name, SZ_alpha2, SZ_name);
dictionary_insert(alpha2_to_name, ET_alpha2, ET_name);
dictionary_insert(alpha2_to_name, FI_alpha2, FI_name);
dictionary_insert(alpha2_to_name, FR_alpha2, FR_name);
dictionary_insert(alpha2_to_name, GF_alpha2, GF_name);
dictionary_insert(alpha2_to_name, GA_alpha2, GA_name);
dictionary_insert(alpha2_to_name, GM_alpha2, GM_name);
dictionary_insert(alpha2_to_name, GE_alpha2, GE_name);
dictionary_insert(alpha2_to_name, DE_alpha2, DE_name);
dictionary_insert(alpha2_to_name, GH_alpha2, GH_name);
dictionary_insert(alpha2_to_name, GI_alpha2, GI_name);
dictionary_insert(alpha2_to_name, GR_alpha2, GR_name);
dictionary_insert(alpha2_to_name, GT_alpha2, GT_name);
dictionary_insert(alpha2_to_name, GN_alpha2, GN_name);
dictionary_insert(alpha2_to_name, GW_alpha2, GW_name);
dictionary_insert(alpha2_to_name, GY_alpha2, GY_name);
dictionary_insert(alpha2_to_name, HT_alpha2, HT_name);
dictionary_insert(alpha2_to_name, VA_alpha2, VA_name);
dictionary_insert(alpha2_to_name, HN_alpha2, HN_name);
dictionary_insert(alpha2_to_name, HK_alpha2, HK_name);
dictionary_insert(alpha2_to_name, HU_alpha2, HU_name);
dictionary_insert(alpha2_to_name, IN_alpha2, IN_name);
dictionary_insert(alpha2_to_name, ID_alpha2, ID_name);
dictionary_insert(alpha2_to_name, IR_alpha2, IR_name);
dictionary_insert(alpha2_to_name, IQ_alpha2, IQ_name);
dictionary_insert(alpha2_to_name, IE_alpha2, IE_name);
dictionary_insert(alpha2_to_name, IL_alpha2, IL_name);
dictionary_insert(alpha2_to_name, IT_alpha2, IT_name);
dictionary_insert(alpha2_to_name, JO_alpha2, JO_name);
dictionary_insert(alpha2_to_name, KZ_alpha2, KZ_name);
dictionary_insert(alpha2_to_name, KE_alpha2, KE_name);
dictionary_insert(alpha2_to_name, KP_alpha2, KP_name);
dictionary_insert(alpha2_to_name, KR_alpha2, KR_name);
dictionary_insert(alpha2_to_name, KW_alpha2, KW_name);
dictionary_insert(alpha2_to_name, KG_alpha2, KG_name);
dictionary_insert(alpha2_to_name, LA_alpha2, LA_name);
dictionary_insert(alpha2_to_name, LV_alpha2, LV_name);
dictionary_insert(alpha2_to_name, LB_alpha2, LB_name);
dictionary_insert(alpha2_to_name, LS_alpha2, LS_name);
dictionary_insert(alpha2_to_name, LR_alpha2, LR_name);
dictionary_insert(alpha2_to_name, LY_alpha2, LY_name);
dictionary_insert(alpha2_to_name, LI_alpha2, LI_name);
dictionary_insert(alpha2_to_name, LT_alpha2, LT_name);
dictionary_insert(alpha2_to_name, LU_alpha2, LU_name);
dictionary_insert(alpha2_to_name, MO_alpha2, MO_name);
dictionary_insert(alpha2_to_name, MW_alpha2, MW_name);
dictionary_insert(alpha2_to_name, MY_alpha2, MY_name);
dictionary_insert(alpha2_to_name, ML_alpha2, ML_name);
dictionary_insert(alpha2_to_name, MR_alpha2, MR_name);
dictionary_insert(alpha2_to_name, MX_alpha2, MX_name);
dictionary_insert(alpha2_to_name, MD_alpha2, MD_name);
dictionary_insert(alpha2_to_name, MC_alpha2, MC_name);
dictionary_insert(alpha2_to_name, MN_alpha2, MN_name);
dictionary_insert(alpha2_to_name, ME_alpha2, ME_name);
dictionary_insert(alpha2_to_name, MA_alpha2, MA_name);
dictionary_insert(alpha2_to_name, MZ_alpha2, MZ_name);
dictionary_insert(alpha2_to_name, MM_alpha2, MM_name);
dictionary_insert(alpha2_to_name, NA_alpha2, NA_name);
dictionary_insert(alpha2_to_name, NP_alpha2, NP_name);
dictionary_insert(alpha2_to_name, NL_alpha2, NL_name);
dictionary_insert(alpha2_to_name, NI_alpha2, NI_name);
dictionary_insert(alpha2_to_name, NE_alpha2, NE_name);
dictionary_insert(alpha2_to_name, NG_alpha2, NG_name);
dictionary_insert(alpha2_to_name, MK_alpha2, MK_name);
dictionary_insert(alpha2_to_name, NO_alpha2, NO_name);
dictionary_insert(alpha2_to_name, OM_alpha2, OM_name);
dictionary_insert(alpha2_to_name, PK_alpha2, PK_name);
dictionary_insert(alpha2_to_name, PS_alpha2, PS_name);
dictionary_insert(alpha2_to_name, PA_alpha2, PA_name);
dictionary_insert(alpha2_to_name, PG_alpha2, PG_name);
dictionary_insert(alpha2_to_name, PY_alpha2, PY_name);
dictionary_insert(alpha2_to_name, PE_alpha2, PE_name);
dictionary_insert(alpha2_to_name, PL_alpha2, PL_name);
dictionary_insert(alpha2_to_name, PT_alpha2, PT_name);
dictionary_insert(alpha2_to_name, QA_alpha2, QA_name);
dictionary_insert(alpha2_to_name, RO_alpha2, RO_name);
dictionary_insert(alpha2_to_name, RU_alpha2, RU_name);
dictionary_insert(alpha2_to_name, RW_alpha2, RW_name);
dictionary_insert(alpha2_to_name, MF_alpha2, MF_name);
dictionary_insert(alpha2_to_name, SM_alpha2, SM_name);
dictionary_insert(alpha2_to_name, SA_alpha2, SA_name);
dictionary_insert(alpha2_to_name, SN_alpha2, SN_name);
dictionary_insert(alpha2_to_name, RS_alpha2, RS_name);
dictionary_insert(alpha2_to_name, SL_alpha2, SL_name);
dictionary_insert(alpha2_to_name, SX_alpha2, SX_name);
dictionary_insert(alpha2_to_name, SK_alpha2, SK_name);
dictionary_insert(alpha2_to_name, SI_alpha2, SI_name);
dictionary_insert(alpha2_to_name, SO_alpha2, SO_name);
dictionary_insert(alpha2_to_name, ZA_alpha2, ZA_name);
dictionary_insert(alpha2_to_name, SS_alpha2, SS_name);
dictionary_insert(alpha2_to_name, ES_alpha2, ES_name);
dictionary_insert(alpha2_to_name, SD_alpha2, SD_name);
dictionary_insert(alpha2_to_name, SR_alpha2, SR_name);
dictionary_insert(alpha2_to_name, SE_alpha2, SE_name);
dictionary_insert(alpha2_to_name, CH_alpha2, CH_name);
dictionary_insert(alpha2_to_name, SY_alpha2, SY_name);
dictionary_insert(alpha2_to_name, TW_alpha2, TW_name);
dictionary_insert(alpha2_to_name, TJ_alpha2, TJ_name);
dictionary_insert(alpha2_to_name, TZ_alpha2, TZ_name);
dictionary_insert(alpha2_to_name, TH_alpha2, TH_name);
dictionary_insert(alpha2_to_name, TL_alpha2, TL_name);
dictionary_insert(alpha2_to_name, TG_alpha2, TG_name);
dictionary_insert(alpha2_to_name, TN_alpha2, TN_name);
dictionary_insert(alpha2_to_name, TR_alpha2, TR_name);
dictionary_insert(alpha2_to_name, TM_alpha2, TM_name);
dictionary_insert(alpha2_to_name, UG_alpha2, UG_name);
dictionary_insert(alpha2_to_name, UA_alpha2, UA_name);
dictionary_insert(alpha2_to_name, AE_alpha2, AE_name);
dictionary_insert(alpha2_to_name, GB_alpha2, GB_name);
dictionary_insert(alpha2_to_name, US_alpha2, US_name);
dictionary_insert(alpha2_to_name, UM_alpha2, UM_name);
dictionary_insert(alpha2_to_name, UY_alpha2, UY_name);
dictionary_insert(alpha2_to_name, UZ_alpha2, UZ_name);
dictionary_insert(alpha2_to_name, VE_alpha2, VE_name);
dictionary_insert(alpha2_to_name, VN_alpha2, VN_name);
dictionary_insert(alpha2_to_name, EH_alpha2, EH_name);
dictionary_insert(alpha2_to_name, YE_alpha2, YE_name);
dictionary_insert(alpha2_to_name, ZM_alpha2, ZM_name);
dictionary_insert(alpha2_to_name, ZW_alpha2, ZW_name);
dictionary_insert(name_to_alpha2, AF_name, AF_alpha2));
dictionary_insert(name_to_alpha2, AL_name, AL_alpha2));
dictionary_insert(name_to_alpha2, DZ_name, DZ_alpha2));
dictionary_insert(name_to_alpha2, AD_name, AD_alpha2));
dictionary_insert(name_to_alpha2, AO_name, AO_alpha2));
dictionary_insert(name_to_alpha2, AR_name, AR_alpha2));
dictionary_insert(name_to_alpha2, AM_name, AM_alpha2));
dictionary_insert(name_to_alpha2, AT_name, AT_alpha2));
dictionary_insert(name_to_alpha2, AZ_name, AZ_alpha2));
dictionary_insert(name_to_alpha2, BD_name, BD_alpha2));
dictionary_insert(name_to_alpha2, BY_name, BY_alpha2));
dictionary_insert(name_to_alpha2, BE_name, BE_alpha2));
dictionary_insert(name_to_alpha2, BZ_name, BZ_alpha2));
dictionary_insert(name_to_alpha2, BJ_name, BJ_alpha2));
dictionary_insert(name_to_alpha2, BT_name, BT_alpha2));
dictionary_insert(name_to_alpha2, BO_name, BO_alpha2));
dictionary_insert(name_to_alpha2, BA_name, BA_alpha2));
dictionary_insert(name_to_alpha2, BW_name, BW_alpha2));
dictionary_insert(name_to_alpha2, BR_name, BR_alpha2));
dictionary_insert(name_to_alpha2, BN_name, BN_alpha2));
dictionary_insert(name_to_alpha2, BG_name, BG_alpha2));
dictionary_insert(name_to_alpha2, BF_name, BF_alpha2));
dictionary_insert(name_to_alpha2, BI_name, BI_alpha2));
dictionary_insert(name_to_alpha2, KH_name, KH_alpha2));
dictionary_insert(name_to_alpha2, CM_name, CM_alpha2));
dictionary_insert(name_to_alpha2, CA_name, CA_alpha2));
dictionary_insert(name_to_alpha2, CF_name, CF_alpha2));
dictionary_insert(name_to_alpha2, TD_name, TD_alpha2));
dictionary_insert(name_to_alpha2, CL_name, CL_alpha2));
dictionary_insert(name_to_alpha2, CN_name, CN_alpha2));
dictionary_insert(name_to_alpha2, CO_name, CO_alpha2));
dictionary_insert(name_to_alpha2, CG_name, CG_alpha2));
dictionary_insert(name_to_alpha2, CD_name, CD_alpha2));
dictionary_insert(name_to_alpha2, CR_name, CR_alpha2));
dictionary_insert(name_to_alpha2, CI_name, CI_alpha2));
dictionary_insert(name_to_alpha2, HR_name, HR_alpha2));
dictionary_insert(name_to_alpha2, CZ_name, CZ_alpha2));
dictionary_insert(name_to_alpha2, DK_name, DK_alpha2));
dictionary_insert(name_to_alpha2, DJ_name, DJ_alpha2));
dictionary_insert(name_to_alpha2, DO_name, DO_alpha2));
dictionary_insert(name_to_alpha2, EC_name, EC_alpha2));
dictionary_insert(name_to_alpha2, EG_name, EG_alpha2));
dictionary_insert(name_to_alpha2, SV_name, SV_alpha2));
dictionary_insert(name_to_alpha2, GQ_name, GQ_alpha2));
dictionary_insert(name_to_alpha2, ER_name, ER_alpha2));
dictionary_insert(name_to_alpha2, EE_name, EE_alpha2));
dictionary_insert(name_to_alpha2, SZ_name, SZ_alpha2));
dictionary_insert(name_to_alpha2, ET_name, ET_alpha2));
dictionary_insert(name_to_alpha2, FI_name, FI_alpha2));
dictionary_insert(name_to_alpha2, FR_name, FR_alpha2));
dictionary_insert(name_to_alpha2, GF_name, GF_alpha2));
dictionary_insert(name_to_alpha2, GA_name, GA_alpha2));
dictionary_insert(name_to_alpha2, GM_name, GM_alpha2));
dictionary_insert(name_to_alpha2, GE_name, GE_alpha2));
dictionary_insert(name_to_alpha2, DE_name, DE_alpha2));
dictionary_insert(name_to_alpha2, GH_name, GH_alpha2));
dictionary_insert(name_to_alpha2, GI_name, GI_alpha2));
dictionary_insert(name_to_alpha2, GR_name, GR_alpha2));
dictionary_insert(name_to_alpha2, GT_name, GT_alpha2));
dictionary_insert(name_to_alpha2, GN_name, GN_alpha2));
dictionary_insert(name_to_alpha2, GW_name, GW_alpha2));
dictionary_insert(name_to_alpha2, GY_name, GY_alpha2));
dictionary_insert(name_to_alpha2, HT_name, HT_alpha2));
dictionary_insert(name_to_alpha2, VA_name, VA_alpha2));
dictionary_insert(name_to_alpha2, HN_name, HN_alpha2));
dictionary_insert(name_to_alpha2, HK_name, HK_alpha2));
dictionary_insert(name_to_alpha2, HU_name, HU_alpha2));
dictionary_insert(name_to_alpha2, IN_name, IN_alpha2));
dictionary_insert(name_to_alpha2, ID_name, ID_alpha2));
dictionary_insert(name_to_alpha2, IR_name, IR_alpha2));
dictionary_insert(name_to_alpha2, IQ_name, IQ_alpha2));
dictionary_insert(name_to_alpha2, IE_name, IE_alpha2));
dictionary_insert(name_to_alpha2, IL_name, IL_alpha2));
dictionary_insert(name_to_alpha2, IT_name, IT_alpha2));
dictionary_insert(name_to_alpha2, JO_name, JO_alpha2));
dictionary_insert(name_to_alpha2, KZ_name, KZ_alpha2));
dictionary_insert(name_to_alpha2, KE_name, KE_alpha2));
dictionary_insert(name_to_alpha2, KP_name, KP_alpha2));
dictionary_insert(name_to_alpha2, KR_name, KR_alpha2));
dictionary_insert(name_to_alpha2, KW_name, KW_alpha2));
dictionary_insert(name_to_alpha2, KG_name, KG_alpha2));
dictionary_insert(name_to_alpha2, LA_name, LA_alpha2));
dictionary_insert(name_to_alpha2, LV_name, LV_alpha2));
dictionary_insert(name_to_alpha2, LB_name, LB_alpha2));
dictionary_insert(name_to_alpha2, LS_name, LS_alpha2));
dictionary_insert(name_to_alpha2, LR_name, LR_alpha2));
dictionary_insert(name_to_alpha2, LY_name, LY_alpha2));
dictionary_insert(name_to_alpha2, LI_name, LI_alpha2));
dictionary_insert(name_to_alpha2, LT_name, LT_alpha2));
dictionary_insert(name_to_alpha2, LU_name, LU_alpha2));
dictionary_insert(name_to_alpha2, MO_name, MO_alpha2));
dictionary_insert(name_to_alpha2, MW_name, MW_alpha2));
dictionary_insert(name_to_alpha2, MY_name, MY_alpha2));
dictionary_insert(name_to_alpha2, ML_name, ML_alpha2));
dictionary_insert(name_to_alpha2, MR_name, MR_alpha2));
dictionary_insert(name_to_alpha2, MX_name, MX_alpha2));
dictionary_insert(name_to_alpha2, MD_name, MD_alpha2));
dictionary_insert(name_to_alpha2, MC_name, MC_alpha2));
dictionary_insert(name_to_alpha2, MN_name, MN_alpha2));
dictionary_insert(name_to_alpha2, ME_name, ME_alpha2));
dictionary_insert(name_to_alpha2, MA_name, MA_alpha2));
dictionary_insert(name_to_alpha2, MZ_name, MZ_alpha2));
dictionary_insert(name_to_alpha2, MM_name, MM_alpha2));
dictionary_insert(name_to_alpha2, NA_name, NA_alpha2));
dictionary_insert(name_to_alpha2, NP_name, NP_alpha2));
dictionary_insert(name_to_alpha2, NL_name, NL_alpha2));
dictionary_insert(name_to_alpha2, NI_name, NI_alpha2));
dictionary_insert(name_to_alpha2, NE_name, NE_alpha2));
dictionary_insert(name_to_alpha2, NG_name, NG_alpha2));
dictionary_insert(name_to_alpha2, MK_name, MK_alpha2));
dictionary_insert(name_to_alpha2, NO_name, NO_alpha2));
dictionary_insert(name_to_alpha2, OM_name, OM_alpha2));
dictionary_insert(name_to_alpha2, PK_name, PK_alpha2));
dictionary_insert(name_to_alpha2, PS_name, PS_alpha2));
dictionary_insert(name_to_alpha2, PA_name, PA_alpha2));
dictionary_insert(name_to_alpha2, PG_name, PG_alpha2));
dictionary_insert(name_to_alpha2, PY_name, PY_alpha2));
dictionary_insert(name_to_alpha2, PE_name, PE_alpha2));
dictionary_insert(name_to_alpha2, PL_name, PL_alpha2));
dictionary_insert(name_to_alpha2, PT_name, PT_alpha2));
dictionary_insert(name_to_alpha2, QA_name, QA_alpha2));
dictionary_insert(name_to_alpha2, RO_name, RO_alpha2));
dictionary_insert(name_to_alpha2, RU_name, RU_alpha2));
dictionary_insert(name_to_alpha2, RW_name, RW_alpha2));
dictionary_insert(name_to_alpha2, MF_name, MF_alpha2));
dictionary_insert(name_to_alpha2, SM_name, SM_alpha2));
dictionary_insert(name_to_alpha2, SA_name, SA_alpha2));
dictionary_insert(name_to_alpha2, SN_name, SN_alpha2));
dictionary_insert(name_to_alpha2, RS_name, RS_alpha2));
dictionary_insert(name_to_alpha2, SL_name, SL_alpha2));
dictionary_insert(name_to_alpha2, SX_name, SX_alpha2));
dictionary_insert(name_to_alpha2, SK_name, SK_alpha2));
dictionary_insert(name_to_alpha2, SI_name, SI_alpha2));
dictionary_insert(name_to_alpha2, SO_name, SO_alpha2));
dictionary_insert(name_to_alpha2, ZA_name, ZA_alpha2));
dictionary_insert(name_to_alpha2, SS_name, SS_alpha2));
dictionary_insert(name_to_alpha2, ES_name, ES_alpha2));
dictionary_insert(name_to_alpha2, SD_name, SD_alpha2));
dictionary_insert(name_to_alpha2, SR_name, SR_alpha2));
dictionary_insert(name_to_alpha2, SE_name, SE_alpha2));
dictionary_insert(name_to_alpha2, CH_name, CH_alpha2));
dictionary_insert(name_to_alpha2, SY_name, SY_alpha2));
dictionary_insert(name_to_alpha2, TW_name, TW_alpha2));
dictionary_insert(name_to_alpha2, TJ_name, TJ_alpha2));
dictionary_insert(name_to_alpha2, TZ_name, TZ_alpha2));
dictionary_insert(name_to_alpha2, TH_name, TH_alpha2));
dictionary_insert(name_to_alpha2, TL_name, TL_alpha2));
dictionary_insert(name_to_alpha2, TG_name, TG_alpha2));
dictionary_insert(name_to_alpha2, TN_name, TN_alpha2));
dictionary_insert(name_to_alpha2, TR_name, TR_alpha2));
dictionary_insert(name_to_alpha2, TM_name, TM_alpha2));
dictionary_insert(name_to_alpha2, UG_name, UG_alpha2));
dictionary_insert(name_to_alpha2, UA_name, UA_alpha2));
dictionary_insert(name_to_alpha2, AE_name, AE_alpha2));
dictionary_insert(name_to_alpha2, GB_name, GB_alpha2));
dictionary_insert(name_to_alpha2, US_name, US_alpha2));
dictionary_insert(name_to_alpha2, UM_name, UM_alpha2));
dictionary_insert(name_to_alpha2, UY_name, UY_alpha2));
dictionary_insert(name_to_alpha2, UZ_name, UZ_alpha2));
dictionary_insert(name_to_alpha2, VE_name, VE_alpha2));
dictionary_insert(name_to_alpha2, VN_name, VN_alpha2));
dictionary_insert(name_to_alpha2, EH_name, EH_alpha2));
dictionary_insert(name_to_alpha2, YE_name, YE_alpha2));
dictionary_insert(name_to_alpha2, ZM_name, ZM_alpha2));
dictionary_insert(name_to_alpha2, ZW_name, ZW_alpha2));
struct Vertex * country_AF = construct_vertex(4, "AF");
struct Vertex * country_AL = construct_vertex(8, "AL");
struct Vertex * country_DZ = construct_vertex(12, "DZ");
struct Vertex * country_AD = construct_vertex(20, "AD");
struct Vertex * country_AO = construct_vertex(24, "AO");
struct Vertex * country_AR = construct_vertex(32, "AR");
struct Vertex * country_AM = construct_vertex(51, "AM");
struct Vertex * country_AT = construct_vertex(40, "AT");
struct Vertex * country_AZ = construct_vertex(31, "AZ");
struct Vertex * country_BD = construct_vertex(50, "BD");
struct Vertex * country_BY = construct_vertex(112, "BY");
struct Vertex * country_BE = construct_vertex(56, "BE");
struct Vertex * country_BZ = construct_vertex(84, "BZ");
struct Vertex * country_BJ = construct_vertex(204, "BJ");
struct Vertex * country_BT = construct_vertex(64, "BT");
struct Vertex * country_BO = construct_vertex(68, "BO");
struct Vertex * country_BA = construct_vertex(70, "BA");
struct Vertex * country_BW = construct_vertex(72, "BW");
struct Vertex * country_BR = construct_vertex(76, "BR");
struct Vertex * country_BN = construct_vertex(96, "BN");
struct Vertex * country_BG = construct_vertex(100, "BG");
struct Vertex * country_BF = construct_vertex(854, "BF");
struct Vertex * country_BI = construct_vertex(108, "BI");
struct Vertex * country_KH = construct_vertex(116, "KH");
struct Vertex * country_CM = construct_vertex(120, "CM");
struct Vertex * country_CA = construct_vertex(124, "CA");
struct Vertex * country_CF = construct_vertex(140, "CF");
struct Vertex * country_TD = construct_vertex(148, "TD");
struct Vertex * country_CL = construct_vertex(152, "CL");
struct Vertex * country_CN = construct_vertex(156, "CN");
struct Vertex * country_CO = construct_vertex(170, "CO");
struct Vertex * country_CG = construct_vertex(178, "CG");
struct Vertex * country_CD = construct_vertex(180, "CD");
struct Vertex * country_CR = construct_vertex(188, "CR");
struct Vertex * country_CI = construct_vertex(384, "CI");
struct Vertex * country_HR = construct_vertex(191, "HR");
struct Vertex * country_CZ = construct_vertex(203, "CZ");
struct Vertex * country_DK = construct_vertex(208, "DK");
struct Vertex * country_DJ = construct_vertex(262, "DJ");
struct Vertex * country_DO = construct_vertex(214, "DO");
struct Vertex * country_EC = construct_vertex(218, "EC");
struct Vertex * country_EG = construct_vertex(818, "EG");
struct Vertex * country_SV = construct_vertex(222, "SV");
struct Vertex * country_GQ = construct_vertex(226, "GQ");
struct Vertex * country_ER = construct_vertex(232, "ER");
struct Vertex * country_EE = construct_vertex(233, "EE");
struct Vertex * country_SZ = construct_vertex(748, "SZ");
struct Vertex * country_ET = construct_vertex(231, "ET");
struct Vertex * country_FI = construct_vertex(246, "FI");
struct Vertex * country_FR = construct_vertex(250, "FR");
struct Vertex * country_GF = construct_vertex(254, "GF");
struct Vertex * country_GA = construct_vertex(266, "GA");
struct Vertex * country_GM = construct_vertex(270, "GM");
struct Vertex * country_GE = construct_vertex(268, "GE");
struct Vertex * country_DE = construct_vertex(276, "DE");
struct Vertex * country_GH = construct_vertex(288, "GH");
struct Vertex * country_GI = construct_vertex(292, "GI");
struct Vertex * country_GR = construct_vertex(300, "GR");
struct Vertex * country_GT = construct_vertex(320, "GT");
struct Vertex * country_GN = construct_vertex(324, "GN");
struct Vertex * country_GW = construct_vertex(624, "GW");
struct Vertex * country_GY = construct_vertex(328, "GY");
struct Vertex * country_HT = construct_vertex(332, "HT");
struct Vertex * country_VA = construct_vertex(336, "VA");
struct Vertex * country_HN = construct_vertex(340, "HN");
struct Vertex * country_HK = construct_vertex(344, "HK");
struct Vertex * country_HU = construct_vertex(348, "HU");
struct Vertex * country_IN = construct_vertex(356, "IN");
struct Vertex * country_ID = construct_vertex(360, "ID");
struct Vertex * country_IR = construct_vertex(364, "IR");
struct Vertex * country_IQ = construct_vertex(368, "IQ");
struct Vertex * country_IE = construct_vertex(372, "IE");
struct Vertex * country_IL = construct_vertex(376, "IL");
struct Vertex * country_IT = construct_vertex(380, "IT");
struct Vertex * country_JO = construct_vertex(400, "JO");
struct Vertex * country_KZ = construct_vertex(398, "KZ");
struct Vertex * country_KE = construct_vertex(404, "KE");
struct Vertex * country_KP = construct_vertex(408, "KP");
struct Vertex * country_KR = construct_vertex(410, "KR");
struct Vertex * country_KW = construct_vertex(414, "KW");
struct Vertex * country_KG = construct_vertex(417, "KG");
struct Vertex * country_LA = construct_vertex(418, "LA");
struct Vertex * country_LV = construct_vertex(428, "LV");
struct Vertex * country_LB = construct_vertex(422, "LB");
struct Vertex * country_LS = construct_vertex(426, "LS");
struct Vertex * country_LR = construct_vertex(430, "LR");
struct Vertex * country_LY = construct_vertex(434, "LY");
struct Vertex * country_LI = construct_vertex(438, "LI");
struct Vertex * country_LT = construct_vertex(440, "LT");
struct Vertex * country_LU = construct_vertex(442, "LU");
struct Vertex * country_MO = construct_vertex(446, "MO");
struct Vertex * country_MW = construct_vertex(454, "MW");
struct Vertex * country_MY = construct_vertex(458, "MY");
struct Vertex * country_ML = construct_vertex(466, "ML");
struct Vertex * country_MR = construct_vertex(478, "MR");
struct Vertex * country_MX = construct_vertex(484, "MX");
struct Vertex * country_MD = construct_vertex(498, "MD");
struct Vertex * country_MC = construct_vertex(492, "MC");
struct Vertex * country_MN = construct_vertex(496, "MN");
struct Vertex * country_ME = construct_vertex(499, "ME");
struct Vertex * country_MA = construct_vertex(504, "MA");
struct Vertex * country_MZ = construct_vertex(508, "MZ");
struct Vertex * country_MM = construct_vertex(104, "MM");
struct Vertex * country_NA = construct_vertex(516, "NA");
struct Vertex * country_NP = construct_vertex(524, "NP");
struct Vertex * country_NL = construct_vertex(528, "NL");
struct Vertex * country_NI = construct_vertex(558, "NI");
struct Vertex * country_NE = construct_vertex(562, "NE");
struct Vertex * country_NG = construct_vertex(566, "NG");
struct Vertex * country_MK = construct_vertex(807, "MK");
struct Vertex * country_NO = construct_vertex(578, "NO");
struct Vertex * country_OM = construct_vertex(512, "OM");
struct Vertex * country_PK = construct_vertex(586, "PK");
struct Vertex * country_PS = construct_vertex(275, "PS");
struct Vertex * country_PA = construct_vertex(591, "PA");
struct Vertex * country_PG = construct_vertex(598, "PG");
struct Vertex * country_PY = construct_vertex(600, "PY");
struct Vertex * country_PE = construct_vertex(604, "PE");
struct Vertex * country_PL = construct_vertex(616, "PL");
struct Vertex * country_PT = construct_vertex(620, "PT");
struct Vertex * country_QA = construct_vertex(634, "QA");
struct Vertex * country_RO = construct_vertex(642, "RO");
struct Vertex * country_RU = construct_vertex(643, "RU");
struct Vertex * country_RW = construct_vertex(646, "RW");
struct Vertex * country_MF = construct_vertex(663, "MF");
struct Vertex * country_SM = construct_vertex(674, "SM");
struct Vertex * country_SA = construct_vertex(682, "SA");
struct Vertex * country_SN = construct_vertex(686, "SN");
struct Vertex * country_RS = construct_vertex(688, "RS");
struct Vertex * country_SL = construct_vertex(694, "SL");
struct Vertex * country_SX = construct_vertex(534, "SX");
struct Vertex * country_SK = construct_vertex(703, "SK");
struct Vertex * country_SI = construct_vertex(705, "SI");
struct Vertex * country_SO = construct_vertex(706, "SO");
struct Vertex * country_ZA = construct_vertex(710, "ZA");
struct Vertex * country_SS = construct_vertex(728, "SS");
struct Vertex * country_ES = construct_vertex(724, "ES");
struct Vertex * country_SD = construct_vertex(729, "SD");
struct Vertex * country_SR = construct_vertex(740, "SR");
struct Vertex * country_SE = construct_vertex(752, "SE");
struct Vertex * country_CH = construct_vertex(756, "CH");
struct Vertex * country_SY = construct_vertex(760, "SY");
struct Vertex * country_TW = construct_vertex(158, "TW");
struct Vertex * country_TJ = construct_vertex(762, "TJ");
struct Vertex * country_TZ = construct_vertex(834, "TZ");
struct Vertex * country_TH = construct_vertex(764, "TH");
struct Vertex * country_TL = construct_vertex(626, "TL");
struct Vertex * country_TG = construct_vertex(768, "TG");
struct Vertex * country_TN = construct_vertex(788, "TN");
struct Vertex * country_TR = construct_vertex(792, "TR");
struct Vertex * country_TM = construct_vertex(795, "TM");
struct Vertex * country_UG = construct_vertex(800, "UG");
struct Vertex * country_UA = construct_vertex(804, "UA");
struct Vertex * country_AE = construct_vertex(784, "AE");
struct Vertex * country_GB = construct_vertex(826, "GB");
struct Vertex * country_US = construct_vertex(840, "US");
struct Vertex * country_UM = construct_vertex(581, "UM");
struct Vertex * country_UY = construct_vertex(858, "UY");
struct Vertex * country_UZ = construct_vertex(860, "UZ");
struct Vertex * country_VE = construct_vertex(862, "VE");
struct Vertex * country_VN = construct_vertex(704, "VN");
struct Vertex * country_EH = construct_vertex(732, "EH");
struct Vertex * country_YE = construct_vertex(887, "YE");
struct Vertex * country_ZM = construct_vertex(894, "ZM");
struct Vertex * country_ZW = construct_vertex(716, "ZW");
countryVertices[4] = country_AF;
countryVertices[8] = country_AL;
countryVertices[12] = country_DZ;
countryVertices[20] = country_AD;
countryVertices[24] = country_AO;
countryVertices[32] = country_AR;
countryVertices[51] = country_AM;
countryVertices[40] = country_AT;
countryVertices[31] = country_AZ;
countryVertices[50] = country_BD;
countryVertices[112] = country_BY;
countryVertices[56] = country_BE;
countryVertices[84] = country_BZ;
countryVertices[204] = country_BJ;
countryVertices[64] = country_BT;
countryVertices[68] = country_BO;
countryVertices[70] = country_BA;
countryVertices[72] = country_BW;
countryVertices[76] = country_BR;
countryVertices[96] = country_BN;
countryVertices[100] = country_BG;
countryVertices[854] = country_BF;
countryVertices[108] = country_BI;
countryVertices[116] = country_KH;
countryVertices[120] = country_CM;
countryVertices[124] = country_CA;
countryVertices[140] = country_CF;
countryVertices[148] = country_TD;
countryVertices[152] = country_CL;
countryVertices[156] = country_CN;
countryVertices[170] = country_CO;
countryVertices[178] = country_CG;
countryVertices[180] = country_CD;
countryVertices[188] = country_CR;
countryVertices[384] = country_CI;
countryVertices[191] = country_HR;
countryVertices[203] = country_CZ;
countryVertices[208] = country_DK;
countryVertices[262] = country_DJ;
countryVertices[214] = country_DO;
countryVertices[218] = country_EC;
countryVertices[818] = country_EG;
countryVertices[222] = country_SV;
countryVertices[226] = country_GQ;
countryVertices[232] = country_ER;
countryVertices[233] = country_EE;
countryVertices[748] = country_SZ;
countryVertices[231] = country_ET;
countryVertices[246] = country_FI;
countryVertices[250] = country_FR;
countryVertices[254] = country_GF;
countryVertices[266] = country_GA;
countryVertices[270] = country_GM;
countryVertices[268] = country_GE;
countryVertices[276] = country_DE;
countryVertices[288] = country_GH;
countryVertices[292] = country_GI;
countryVertices[300] = country_GR;
countryVertices[320] = country_GT;
countryVertices[324] = country_GN;
countryVertices[624] = country_GW;
countryVertices[328] = country_GY;
countryVertices[332] = country_HT;
countryVertices[336] = country_VA;
countryVertices[340] = country_HN;
countryVertices[344] = country_HK;
countryVertices[348] = country_HU;
countryVertices[356] = country_IN;
countryVertices[360] = country_ID;
countryVertices[364] = country_IR;
countryVertices[368] = country_IQ;
countryVertices[372] = country_IE;
countryVertices[376] = country_IL;
countryVertices[380] = country_IT;
countryVertices[400] = country_JO;
countryVertices[398] = country_KZ;
countryVertices[404] = country_KE;
countryVertices[408] = country_KP;
countryVertices[410] = country_KR;
countryVertices[414] = country_KW;
countryVertices[417] = country_KG;
countryVertices[418] = country_LA;
countryVertices[428] = country_LV;
countryVertices[422] = country_LB;
countryVertices[426] = country_LS;
countryVertices[430] = country_LR;
countryVertices[434] = country_LY;
countryVertices[438] = country_LI;
countryVertices[440] = country_LT;
countryVertices[442] = country_LU;
countryVertices[446] = country_MO;
countryVertices[454] = country_MW;
countryVertices[458] = country_MY;
countryVertices[466] = country_ML;
countryVertices[478] = country_MR;
countryVertices[484] = country_MX;
countryVertices[498] = country_MD;
countryVertices[492] = country_MC;
countryVertices[496] = country_MN;
countryVertices[499] = country_ME;
countryVertices[504] = country_MA;
countryVertices[508] = country_MZ;
countryVertices[104] = country_MM;
countryVertices[516] = country_NA;
countryVertices[524] = country_NP;
countryVertices[528] = country_NL;
countryVertices[558] = country_NI;
countryVertices[562] = country_NE;
countryVertices[566] = country_NG;
countryVertices[807] = country_MK;
countryVertices[578] = country_NO;
countryVertices[512] = country_OM;
countryVertices[586] = country_PK;
countryVertices[275] = country_PS;
countryVertices[591] = country_PA;
countryVertices[598] = country_PG;
countryVertices[600] = country_PY;
countryVertices[604] = country_PE;
countryVertices[616] = country_PL;
countryVertices[620] = country_PT;
countryVertices[634] = country_QA;
countryVertices[642] = country_RO;
countryVertices[643] = country_RU;
countryVertices[646] = country_RW;
countryVertices[663] = country_MF;
countryVertices[674] = country_SM;
countryVertices[682] = country_SA;
countryVertices[686] = country_SN;
countryVertices[688] = country_RS;
countryVertices[694] = country_SL;
countryVertices[534] = country_SX;
countryVertices[703] = country_SK;
countryVertices[705] = country_SI;
countryVertices[706] = country_SO;
countryVertices[710] = country_ZA;
countryVertices[728] = country_SS;
countryVertices[724] = country_ES;
countryVertices[729] = country_SD;
countryVertices[740] = country_SR;
countryVertices[752] = country_SE;
countryVertices[756] = country_CH;
countryVertices[760] = country_SY;
countryVertices[158] = country_TW;
countryVertices[762] = country_TJ;
countryVertices[834] = country_TZ;
countryVertices[764] = country_TH;
countryVertices[626] = country_TL;
countryVertices[768] = country_TG;
countryVertices[788] = country_TN;
countryVertices[792] = country_TR;
countryVertices[795] = country_TM;
countryVertices[800] = country_UG;
countryVertices[804] = country_UA;
countryVertices[784] = country_AE;
countryVertices[826] = country_GB;
countryVertices[840] = country_US;
countryVertices[581] = country_UM;
countryVertices[858] = country_UY;
countryVertices[860] = country_UZ;
countryVertices[862] = country_VE;
countryVertices[704] = country_VN;
countryVertices[732] = country_EH;
countryVertices[887] = country_YE;
countryVertices[894] = country_ZM;
countryVertices[716] = country_ZW;
dictionary_insert(alpha2_to_numeric, "AF", "4");
dictionary_insert(alpha2_to_numeric, "AL", "8");
dictionary_insert(alpha2_to_numeric, "DZ", "12");
dictionary_insert(alpha2_to_numeric, "AD", "20");
dictionary_insert(alpha2_to_numeric, "AO", "24");
dictionary_insert(alpha2_to_numeric, "AR", "32");
dictionary_insert(alpha2_to_numeric, "AM", "51");
dictionary_insert(alpha2_to_numeric, "AT", "40");
dictionary_insert(alpha2_to_numeric, "AZ", "31");
dictionary_insert(alpha2_to_numeric, "BD", "50");
dictionary_insert(alpha2_to_numeric, "BY", "112");
dictionary_insert(alpha2_to_numeric, "BE", "56");
dictionary_insert(alpha2_to_numeric, "BZ", "84");
dictionary_insert(alpha2_to_numeric, "BJ", "204");
dictionary_insert(alpha2_to_numeric, "BT", "64");
dictionary_insert(alpha2_to_numeric, "BO", "68");
dictionary_insert(alpha2_to_numeric, "BA", "70");
dictionary_insert(alpha2_to_numeric, "BW", "72");
dictionary_insert(alpha2_to_numeric, "BR", "76");
dictionary_insert(alpha2_to_numeric, "BN", "96");
dictionary_insert(alpha2_to_numeric, "BG", "100");
dictionary_insert(alpha2_to_numeric, "BF", "854");
dictionary_insert(alpha2_to_numeric, "BI", "108");
dictionary_insert(alpha2_to_numeric, "KH", "116");
dictionary_insert(alpha2_to_numeric, "CM", "120");
dictionary_insert(alpha2_to_numeric, "CA", "124");
dictionary_insert(alpha2_to_numeric, "CF", "140");
dictionary_insert(alpha2_to_numeric, "TD", "148");
dictionary_insert(alpha2_to_numeric, "CL", "152");
dictionary_insert(alpha2_to_numeric, "CN", "156");
dictionary_insert(alpha2_to_numeric, "CO", "170");
dictionary_insert(alpha2_to_numeric, "CG", "178");
dictionary_insert(alpha2_to_numeric, "CD", "180");
dictionary_insert(alpha2_to_numeric, "CR", "188");
dictionary_insert(alpha2_to_numeric, "CI", "384");
dictionary_insert(alpha2_to_numeric, "HR", "191");
dictionary_insert(alpha2_to_numeric, "CZ", "203");
dictionary_insert(alpha2_to_numeric, "DK", "208");
dictionary_insert(alpha2_to_numeric, "DJ", "262");
dictionary_insert(alpha2_to_numeric, "DO", "214");
dictionary_insert(alpha2_to_numeric, "EC", "218");
dictionary_insert(alpha2_to_numeric, "EG", "818");
dictionary_insert(alpha2_to_numeric, "SV", "222");
dictionary_insert(alpha2_to_numeric, "GQ", "226");
dictionary_insert(alpha2_to_numeric, "ER", "232");
dictionary_insert(alpha2_to_numeric, "EE", "233");
dictionary_insert(alpha2_to_numeric, "SZ", "748");
dictionary_insert(alpha2_to_numeric, "ET", "231");
dictionary_insert(alpha2_to_numeric, "FI", "246");
dictionary_insert(alpha2_to_numeric, "FR", "250");
dictionary_insert(alpha2_to_numeric, "GF", "254");
dictionary_insert(alpha2_to_numeric, "GA", "266");
dictionary_insert(alpha2_to_numeric, "GM", "270");
dictionary_insert(alpha2_to_numeric, "GE", "268");
dictionary_insert(alpha2_to_numeric, "DE", "276");
dictionary_insert(alpha2_to_numeric, "GH", "288");
dictionary_insert(alpha2_to_numeric, "GI", "292");
dictionary_insert(alpha2_to_numeric, "GR", "300");
dictionary_insert(alpha2_to_numeric, "GT", "320");
dictionary_insert(alpha2_to_numeric, "GN", "324");
dictionary_insert(alpha2_to_numeric, "GW", "624");
dictionary_insert(alpha2_to_numeric, "GY", "328");
dictionary_insert(alpha2_to_numeric, "HT", "332");
dictionary_insert(alpha2_to_numeric, "VA", "336");
dictionary_insert(alpha2_to_numeric, "HN", "340");
dictionary_insert(alpha2_to_numeric, "HK", "344");
dictionary_insert(alpha2_to_numeric, "HU", "348");
dictionary_insert(alpha2_to_numeric, "IN", "356");
dictionary_insert(alpha2_to_numeric, "ID", "360");
dictionary_insert(alpha2_to_numeric, "IR", "364");
dictionary_insert(alpha2_to_numeric, "IQ", "368");
dictionary_insert(alpha2_to_numeric, "IE", "372");
dictionary_insert(alpha2_to_numeric, "IL", "376");
dictionary_insert(alpha2_to_numeric, "IT", "380");
dictionary_insert(alpha2_to_numeric, "JO", "400");
dictionary_insert(alpha2_to_numeric, "KZ", "398");
dictionary_insert(alpha2_to_numeric, "KE", "404");
dictionary_insert(alpha2_to_numeric, "KP", "408");
dictionary_insert(alpha2_to_numeric, "KR", "410");
dictionary_insert(alpha2_to_numeric, "KW", "414");
dictionary_insert(alpha2_to_numeric, "KG", "417");
dictionary_insert(alpha2_to_numeric, "LA", "418");
dictionary_insert(alpha2_to_numeric, "LV", "428");
dictionary_insert(alpha2_to_numeric, "LB", "422");
dictionary_insert(alpha2_to_numeric, "LS", "426");
dictionary_insert(alpha2_to_numeric, "LR", "430");
dictionary_insert(alpha2_to_numeric, "LY", "434");
dictionary_insert(alpha2_to_numeric, "LI", "438");
dictionary_insert(alpha2_to_numeric, "LT", "440");
dictionary_insert(alpha2_to_numeric, "LU", "442");
dictionary_insert(alpha2_to_numeric, "MO", "446");
dictionary_insert(alpha2_to_numeric, "MW", "454");
dictionary_insert(alpha2_to_numeric, "MY", "458");
dictionary_insert(alpha2_to_numeric, "ML", "466");
dictionary_insert(alpha2_to_numeric, "MR", "478");
dictionary_insert(alpha2_to_numeric, "MX", "484");
dictionary_insert(alpha2_to_numeric, "MD", "498");
dictionary_insert(alpha2_to_numeric, "MC", "492");
dictionary_insert(alpha2_to_numeric, "MN", "496");
dictionary_insert(alpha2_to_numeric, "ME", "499");
dictionary_insert(alpha2_to_numeric, "MA", "504");
dictionary_insert(alpha2_to_numeric, "MZ", "508");
dictionary_insert(alpha2_to_numeric, "MM", "104");
dictionary_insert(alpha2_to_numeric, "NA", "516");
dictionary_insert(alpha2_to_numeric, "NP", "524");
dictionary_insert(alpha2_to_numeric, "NL", "528");
dictionary_insert(alpha2_to_numeric, "NI", "558");
dictionary_insert(alpha2_to_numeric, "NE", "562");
dictionary_insert(alpha2_to_numeric, "NG", "566");
dictionary_insert(alpha2_to_numeric, "MK", "807");
dictionary_insert(alpha2_to_numeric, "NO", "578");
dictionary_insert(alpha2_to_numeric, "OM", "512");
dictionary_insert(alpha2_to_numeric, "PK", "586");
dictionary_insert(alpha2_to_numeric, "PS", "275");
dictionary_insert(alpha2_to_numeric, "PA", "591");
dictionary_insert(alpha2_to_numeric, "PG", "598");
dictionary_insert(alpha2_to_numeric, "PY", "600");
dictionary_insert(alpha2_to_numeric, "PE", "604");
dictionary_insert(alpha2_to_numeric, "PL", "616");
dictionary_insert(alpha2_to_numeric, "PT", "620");
dictionary_insert(alpha2_to_numeric, "QA", "634");
dictionary_insert(alpha2_to_numeric, "RO", "642");
dictionary_insert(alpha2_to_numeric, "RU", "643");
dictionary_insert(alpha2_to_numeric, "RW", "646");
dictionary_insert(alpha2_to_numeric, "MF", "663");
dictionary_insert(alpha2_to_numeric, "SM", "674");
dictionary_insert(alpha2_to_numeric, "SA", "682");
dictionary_insert(alpha2_to_numeric, "SN", "686");
dictionary_insert(alpha2_to_numeric, "RS", "688");
dictionary_insert(alpha2_to_numeric, "SL", "694");
dictionary_insert(alpha2_to_numeric, "SX", "534");
dictionary_insert(alpha2_to_numeric, "SK", "703");
dictionary_insert(alpha2_to_numeric, "SI", "705");
dictionary_insert(alpha2_to_numeric, "SO", "706");
dictionary_insert(alpha2_to_numeric, "ZA", "710");
dictionary_insert(alpha2_to_numeric, "SS", "728");
dictionary_insert(alpha2_to_numeric, "ES", "724");
dictionary_insert(alpha2_to_numeric, "SD", "729");
dictionary_insert(alpha2_to_numeric, "SR", "740");
dictionary_insert(alpha2_to_numeric, "SE", "752");
dictionary_insert(alpha2_to_numeric, "CH", "756");
dictionary_insert(alpha2_to_numeric, "SY", "760");
dictionary_insert(alpha2_to_numeric, "TW", "158");
dictionary_insert(alpha2_to_numeric, "TJ", "762");
dictionary_insert(alpha2_to_numeric, "TZ", "834");
dictionary_insert(alpha2_to_numeric, "TH", "764");
dictionary_insert(alpha2_to_numeric, "TL", "626");
dictionary_insert(alpha2_to_numeric, "TG", "768");
dictionary_insert(alpha2_to_numeric, "TN", "788");
dictionary_insert(alpha2_to_numeric, "TR", "792");
dictionary_insert(alpha2_to_numeric, "TM", "795");
dictionary_insert(alpha2_to_numeric, "UG", "800");
dictionary_insert(alpha2_to_numeric, "UA", "804");
dictionary_insert(alpha2_to_numeric, "AE", "784");
dictionary_insert(alpha2_to_numeric, "GB", "826");
dictionary_insert(alpha2_to_numeric, "US", "840");
dictionary_insert(alpha2_to_numeric, "UM", "581");
dictionary_insert(alpha2_to_numeric, "UY", "858");
dictionary_insert(alpha2_to_numeric, "UZ", "860");
dictionary_insert(alpha2_to_numeric, "VE", "862");
dictionary_insert(alpha2_to_numeric, "VN", "704");
dictionary_insert(alpha2_to_numeric, "EH", "732");
dictionary_insert(alpha2_to_numeric, "YE", "887");
dictionary_insert(alpha2_to_numeric, "ZM", "894");
dictionary_insert(alpha2_to_numeric, "ZW", "716");
add_edge(country_AD, country_FR);
add_edge(country_AD, country_ES);
add_edge(country_AE, country_OM);
add_edge(country_AE, country_SA);
add_edge(country_AF, country_CN);
add_edge(country_AF, country_IR);
add_edge(country_AF, country_PK);
add_edge(country_AF, country_TJ);
add_edge(country_AF, country_TM);
add_edge(country_AF, country_UZ);
add_edge(country_AL, country_GR);
add_edge(country_AL, country_ME);
add_edge(country_AL, country_MK);
add_edge(country_AL, country_RS);
add_edge(country_AM, country_AZ);
add_edge(country_AM, country_GE);
add_edge(country_AM, country_IR);
add_edge(country_AM, country_TR);
add_edge(country_AO, country_CG);
add_edge(country_AO, country_CD);
add_edge(country_AO, country_NA);
add_edge(country_AO, country_ZM);
add_edge(country_AR, country_BO);
add_edge(country_AR, country_BR);
add_edge(country_AR, country_CL);
add_edge(country_AR, country_PY);
add_edge(country_AR, country_UY);
add_edge(country_AT, country_CZ);
add_edge(country_AT, country_DE);
add_edge(country_AT, country_HU);
add_edge(country_AT, country_IT);
add_edge(country_AT, country_LI);
add_edge(country_AT, country_SK);
add_edge(country_AT, country_SI);
add_edge(country_AT, country_CH);
add_edge(country_AZ, country_AM);
add_edge(country_AZ, country_GE);
add_edge(country_AZ, country_IR);
add_edge(country_AZ, country_RU);
add_edge(country_AZ, country_TR);
add_edge(country_BA, country_HR);
add_edge(country_BA, country_ME);
add_edge(country_BA, country_RS);
add_edge(country_BD, country_IN);
add_edge(country_BD, country_MM);
add_edge(country_BE, country_FR);
add_edge(country_BE, country_DE);
add_edge(country_BE, country_LU);
add_edge(country_BE, country_NL);
add_edge(country_BF, country_BJ);
add_edge(country_BF, country_CI);
add_edge(country_BF, country_GH);
add_edge(country_BF, country_ML);
add_edge(country_BF, country_NE);
add_edge(country_BF, country_TG);
add_edge(country_BG, country_GR);
add_edge(country_BG, country_MK);
add_edge(country_BG, country_RO);
add_edge(country_BG, country_RS);
add_edge(country_BG, country_TR);
add_edge(country_BI, country_CD);
add_edge(country_BI, country_RW);
add_edge(country_BI, country_TZ);
add_edge(country_BJ, country_BF);
add_edge(country_BJ, country_NE);
add_edge(country_BJ, country_NG);
add_edge(country_BJ, country_TG);
add_edge(country_BN, country_MY);
add_edge(country_BO, country_AR);
add_edge(country_BO, country_BR);
add_edge(country_BO, country_CL);
add_edge(country_BO, country_PY);
add_edge(country_BO, country_PE);
add_edge(country_BR, country_AR);
add_edge(country_BR, country_BO);
add_edge(country_BR, country_CO);
add_edge(country_BR, country_GF);
add_edge(country_BR, country_GY);
add_edge(country_BR, country_PY);
add_edge(country_BR, country_PE);
add_edge(country_BR, country_SR);
add_edge(country_BR, country_UY);
add_edge(country_BR, country_VE);
add_edge(country_BT, country_CN);
add_edge(country_BT, country_IN);
add_edge(country_BW, country_NA);
add_edge(country_BW, country_ZA);
add_edge(country_BW, country_ZM);
add_edge(country_BW, country_ZW);
add_edge(country_BY, country_LV);
add_edge(country_BY, country_LT);
add_edge(country_BY, country_PL);
add_edge(country_BY, country_RU);
add_edge(country_BY, country_UA);
add_edge(country_BZ, country_GT);
add_edge(country_BZ, country_MX);
add_edge(country_CA, country_US);
add_edge(country_CD, country_AO);
add_edge(country_CD, country_BI);
add_edge(country_CD, country_CF);
add_edge(country_CD, country_CG);
add_edge(country_CD, country_RW);
add_edge(country_CD, country_SS);
add_edge(country_CD, country_TZ);
add_edge(country_CD, country_UG);
add_edge(country_CD, country_ZM);
add_edge(country_CF, country_CM);
add_edge(country_CF, country_TD);
add_edge(country_CF, country_CG);
add_edge(country_CF, country_CD);
add_edge(country_CF, country_SS);
add_edge(country_CF, country_SD);
add_edge(country_CG, country_AO);
add_edge(country_CG, country_CM);
add_edge(country_CG, country_CF);
add_edge(country_CG, country_CD);
add_edge(country_CG, country_GA);
add_edge(country_CH, country_AT);
add_edge(country_CH, country_FR);
add_edge(country_CH, country_DE);
add_edge(country_CH, country_IT);
add_edge(country_CH, country_LI);
add_edge(country_CI, country_BF);
add_edge(country_CI, country_GH);
add_edge(country_CI, country_GN);
add_edge(country_CI, country_LR);
add_edge(country_CI, country_ML);
add_edge(country_CL, country_AR);
add_edge(country_CL, country_BO);
add_edge(country_CL, country_PE);
add_edge(country_CM, country_CF);
add_edge(country_CM, country_TD);
add_edge(country_CM, country_CG);
add_edge(country_CM, country_GQ);
add_edge(country_CM, country_GA);
add_edge(country_CM, country_NG);
add_edge(country_CN, country_AF);
add_edge(country_CN, country_BT);
add_edge(country_CN, country_HK);
add_edge(country_CN, country_IN);
add_edge(country_CN, country_KZ);
add_edge(country_CN, country_KP);
add_edge(country_CN, country_KG);
add_edge(country_CN, country_LA);
add_edge(country_CN, country_MO);
add_edge(country_CN, country_MN);
add_edge(country_CN, country_MM);
add_edge(country_CN, country_NP);
add_edge(country_CN, country_PK);
add_edge(country_CN, country_RU);
add_edge(country_CN, country_TJ);
add_edge(country_CN, country_VN);
add_edge(country_CO, country_BR);
add_edge(country_CO, country_EC);
add_edge(country_CO, country_PA);
add_edge(country_CO, country_PE);
add_edge(country_CO, country_VE);
add_edge(country_CR, country_NI);
add_edge(country_CR, country_PA);
add_edge(country_CZ, country_AT);
add_edge(country_CZ, country_DE);
add_edge(country_CZ, country_PL);
add_edge(country_CZ, country_SK);
add_edge(country_DE, country_AT);
add_edge(country_DE, country_BE);
add_edge(country_DE, country_CZ);
add_edge(country_DE, country_DK);
add_edge(country_DE, country_FR);
add_edge(country_DE, country_LU);
add_edge(country_DE, country_NL);
add_edge(country_DE, country_PL);
add_edge(country_DE, country_CH);
add_edge(country_DJ, country_ER);
add_edge(country_DJ, country_ET);
add_edge(country_DJ, country_SO);
add_edge(country_DK, country_DE);
add_edge(country_DO, country_HT);
add_edge(country_DZ, country_LY);
add_edge(country_DZ, country_ML);
add_edge(country_DZ, country_MR);
add_edge(country_DZ, country_MA);
add_edge(country_DZ, country_NE);
add_edge(country_DZ, country_TN);
add_edge(country_DZ, country_EH);
add_edge(country_EC, country_CO);
add_edge(country_EC, country_PE);
add_edge(country_EE, country_LV);
add_edge(country_EE, country_RU);
add_edge(country_EG, country_IL);
add_edge(country_EG, country_LY);
add_edge(country_EG, country_PS);
add_edge(country_EG, country_SD);
add_edge(country_EH, country_DZ);
add_edge(country_EH, country_MR);
add_edge(country_EH, country_MA);
add_edge(country_ER, country_DJ);
add_edge(country_ER, country_ET);
add_edge(country_ER, country_SD);
add_edge(country_ES, country_AD);
add_edge(country_ES, country_FR);
add_edge(country_ES, country_GI);
add_edge(country_ES, country_MA);
add_edge(country_ES, country_PT);
add_edge(country_ET, country_DJ);
add_edge(country_ET, country_ER);
add_edge(country_ET, country_KE);
add_edge(country_ET, country_SO);
add_edge(country_ET, country_SS);
add_edge(country_ET, country_SD);
add_edge(country_FI, country_NO);
add_edge(country_FI, country_RU);
add_edge(country_FI, country_SE);
add_edge(country_FR, country_AD);
add_edge(country_FR, country_BE);
add_edge(country_FR, country_DE);
add_edge(country_FR, country_IT);
add_edge(country_FR, country_LU);
add_edge(country_FR, country_MC);
add_edge(country_FR, country_ES);
add_edge(country_FR, country_CH);
add_edge(country_GA, country_CM);
add_edge(country_GA, country_CG);
add_edge(country_GA, country_GQ);
add_edge(country_GB, country_IE);
add_edge(country_GE, country_AM);
add_edge(country_GE, country_AZ);
add_edge(country_GE, country_RU);
add_edge(country_GE, country_TR);
add_edge(country_GF, country_BR);
add_edge(country_GF, country_SR);
add_edge(country_GH, country_BF);
add_edge(country_GH, country_CI);
add_edge(country_GH, country_TG);
add_edge(country_GI, country_ES);
add_edge(country_GM, country_SN);
add_edge(country_GN, country_CI);
add_edge(country_GN, country_GW);
add_edge(country_GN, country_LR);
add_edge(country_GN, country_ML);
add_edge(country_GN, country_SN);
add_edge(country_GN, country_SL);
add_edge(country_GQ, country_CM);
add_edge(country_GQ, country_GA);
add_edge(country_GR, country_AL);
add_edge(country_GR, country_BG);
add_edge(country_GR, country_MK);
add_edge(country_GR, country_TR);
add_edge(country_GT, country_BZ);
add_edge(country_GT, country_SV);
add_edge(country_GT, country_HN);
add_edge(country_GT, country_MX);
add_edge(country_GW, country_GN);
add_edge(country_GW, country_SN);
add_edge(country_GY, country_BR);
add_edge(country_GY, country_SR);
add_edge(country_GY, country_VE);
add_edge(country_HK, country_CN);
add_edge(country_HN, country_SV);
add_edge(country_HN, country_GT);
add_edge(country_HN, country_NI);
add_edge(country_HR, country_BA);
add_edge(country_HR, country_HU);
add_edge(country_HR, country_ME);
add_edge(country_HR, country_RS);
add_edge(country_HR, country_SI);
add_edge(country_HT, country_DO);
add_edge(country_HU, country_AT);
add_edge(country_HU, country_HR);
add_edge(country_HU, country_RO);
add_edge(country_HU, country_RS);
add_edge(country_HU, country_SK);
add_edge(country_HU, country_SI);
add_edge(country_HU, country_UA);
add_edge(country_ID, country_MY);
add_edge(country_ID, country_PG);
add_edge(country_ID, country_TL);
add_edge(country_IE, country_GB);
add_edge(country_IL, country_EG);
add_edge(country_IL, country_JO);
add_edge(country_IL, country_LB);
add_edge(country_IL, country_PS);
add_edge(country_IL, country_SY);
add_edge(country_IN, country_BD);
add_edge(country_IN, country_BT);
add_edge(country_IN, country_CN);
add_edge(country_IN, country_MM);
add_edge(country_IN, country_NP);
add_edge(country_IN, country_PK);
add_edge(country_IQ, country_IR);
add_edge(country_IQ, country_JO);
add_edge(country_IQ, country_KW);
add_edge(country_IQ, country_SA);
add_edge(country_IQ, country_SY);
add_edge(country_IQ, country_TR);
add_edge(country_IR, country_AF);
add_edge(country_IR, country_AM);
add_edge(country_IR, country_AZ);
add_edge(country_IR, country_IQ);
add_edge(country_IR, country_PK);
add_edge(country_IR, country_TR);
add_edge(country_IR, country_TM);
add_edge(country_IT, country_AT);
add_edge(country_IT, country_FR);
add_edge(country_IT, country_SM);
add_edge(country_IT, country_SI);
add_edge(country_IT, country_CH);
add_edge(country_IT, country_VA);
add_edge(country_JO, country_IQ);
add_edge(country_JO, country_IL);
add_edge(country_JO, country_PS);
add_edge(country_JO, country_SA);
add_edge(country_JO, country_SY);
add_edge(country_KE, country_ET);
add_edge(country_KE, country_SO);
add_edge(country_KE, country_SS);
add_edge(country_KE, country_TZ);
add_edge(country_KE, country_UG);
add_edge(country_KG, country_CN);
add_edge(country_KG, country_KZ);
add_edge(country_KG, country_TJ);
add_edge(country_KG, country_UZ);
add_edge(country_KH, country_LA);
add_edge(country_KH, country_TH);
add_edge(country_KH, country_VN);
add_edge(country_KP, country_CN);
add_edge(country_KP, country_KR);
add_edge(country_KP, country_RU);
add_edge(country_KR, country_KP);
add_edge(country_KW, country_IQ);
add_edge(country_KW, country_SA);
add_edge(country_KZ, country_CN);
add_edge(country_KZ, country_KG);
add_edge(country_KZ, country_RU);
add_edge(country_KZ, country_TM);
add_edge(country_KZ, country_UZ);
add_edge(country_LA, country_CN);
add_edge(country_LA, country_KH);
add_edge(country_LA, country_MM);
add_edge(country_LA, country_TH);
add_edge(country_LA, country_VN);
add_edge(country_LB, country_IL);
add_edge(country_LB, country_SY);
add_edge(country_LI, country_AT);
add_edge(country_LI, country_CH);
add_edge(country_LR, country_CI);
add_edge(country_LR, country_GN);
add_edge(country_LR, country_SL);
add_edge(country_LS, country_ZA);
add_edge(country_LT, country_BY);
add_edge(country_LT, country_LV);
add_edge(country_LT, country_PL);
add_edge(country_LT, country_RU);
add_edge(country_LU, country_BE);
add_edge(country_LU, country_DE);
add_edge(country_LU, country_FR);
add_edge(country_LV, country_BY);
add_edge(country_LV, country_EE);
add_edge(country_LV, country_LT);
add_edge(country_LV, country_RU);
add_edge(country_LY, country_DZ);
add_edge(country_LY, country_TD);
add_edge(country_LY, country_EG);
add_edge(country_LY, country_NE);
add_edge(country_LY, country_SD);
add_edge(country_LY, country_TN);
add_edge(country_MA, country_DZ);
add_edge(country_MA, country_ES);
add_edge(country_MA, country_EH);
add_edge(country_MC, country_FR);
add_edge(country_MD, country_RO);
add_edge(country_MD, country_UA);
add_edge(country_ME, country_AL);
add_edge(country_ME, country_BA);
add_edge(country_ME, country_HR);
add_edge(country_ME, country_RS);
add_edge(country_MF, country_SX);
add_edge(country_MK, country_AL);
add_edge(country_MK, country_BG);
add_edge(country_MK, country_GR);
add_edge(country_MK, country_RS);
add_edge(country_ML, country_DZ);
add_edge(country_ML, country_BF);
add_edge(country_ML, country_CI);
add_edge(country_ML, country_GN);
add_edge(country_ML, country_MR);
add_edge(country_ML, country_NE);
add_edge(country_ML, country_SN);
add_edge(country_MM, country_BD);
add_edge(country_MM, country_CN);
add_edge(country_MM, country_IN);
add_edge(country_MM, country_LA);
add_edge(country_MM, country_TH);
add_edge(country_MN, country_CN);
add_edge(country_MN, country_RU);
add_edge(country_MO, country_CN);
add_edge(country_MR, country_DZ);
add_edge(country_MR, country_ML);
add_edge(country_MR, country_SN);
add_edge(country_MR, country_EH);
add_edge(country_MW, country_MZ);
add_edge(country_MW, country_TZ);
add_edge(country_MW, country_ZM);
add_edge(country_MX, country_BZ);
add_edge(country_MX, country_GT);
add_edge(country_MX, country_US);
add_edge(country_MY, country_BN);
add_edge(country_MY, country_ID);
add_edge(country_MY, country_TH);
add_edge(country_MZ, country_MW);
add_edge(country_MZ, country_SZ);
add_edge(country_MZ, country_ZA);
add_edge(country_MZ, country_TZ);
add_edge(country_MZ, country_ZM);
add_edge(country_MZ, country_ZW);
add_edge(country_NA, country_AO);
add_edge(country_NA, country_BW);
add_edge(country_NA, country_ZA);
add_edge(country_NA, country_ZM);
add_edge(country_NE, country_DZ);
add_edge(country_NE, country_BJ);
add_edge(country_NE, country_BF);
add_edge(country_NE, country_TD);
add_edge(country_NE, country_LY);
add_edge(country_NE, country_ML);
add_edge(country_NE, country_NG);
add_edge(country_NG, country_BJ);
add_edge(country_NG, country_CM);
add_edge(country_NG, country_TD);
add_edge(country_NG, country_NE);
add_edge(country_NI, country_CR);
add_edge(country_NI, country_HN);
add_edge(country_NL, country_BE);
add_edge(country_NL, country_DE);
add_edge(country_NO, country_FI);
add_edge(country_NO, country_RU);
add_edge(country_NO, country_SE);
add_edge(country_NP, country_CN);
add_edge(country_NP, country_IN);
add_edge(country_OM, country_AE);
add_edge(country_OM, country_SA);
add_edge(country_OM, country_YE);
add_edge(country_PA, country_CO);
add_edge(country_PA, country_CR);
add_edge(country_PE, country_BO);
add_edge(country_PE, country_BR);
add_edge(country_PE, country_CL);
add_edge(country_PE, country_CO);
add_edge(country_PE, country_EC);
add_edge(country_PG, country_ID);
add_edge(country_PK, country_AF);
add_edge(country_PK, country_CN);
add_edge(country_PK, country_IN);
add_edge(country_PK, country_IR);
add_edge(country_PL, country_BY);
add_edge(country_PL, country_CZ);
add_edge(country_PL, country_DE);
add_edge(country_PL, country_LT);
add_edge(country_PL, country_RU);
add_edge(country_PL, country_SK);
add_edge(country_PL, country_UA);
add_edge(country_PS, country_EG);
add_edge(country_PS, country_IL);
add_edge(country_PS, country_JO);
add_edge(country_PT, country_ES);
add_edge(country_PY, country_AR);
add_edge(country_PY, country_BO);
add_edge(country_PY, country_BR);
add_edge(country_QA, country_SA);
add_edge(country_RO, country_BG);
add_edge(country_RO, country_HU);
add_edge(country_RO, country_MD);
add_edge(country_RO, country_RS);
add_edge(country_RO, country_UA);
add_edge(country_RS, country_AL);
add_edge(country_RS, country_BA);
add_edge(country_RS, country_BG);
add_edge(country_RS, country_HR);
add_edge(country_RS, country_HU);
add_edge(country_RS, country_ME);
add_edge(country_RS, country_MK);
add_edge(country_RS, country_RO);
add_edge(country_RU, country_AZ);
add_edge(country_RU, country_BY);
add_edge(country_RU, country_CN);
add_edge(country_RU, country_EE);
add_edge(country_RU, country_FI);
add_edge(country_RU, country_GE);
add_edge(country_RU, country_KZ);
add_edge(country_RU, country_KP);
add_edge(country_RU, country_LV);
add_edge(country_RU, country_LT);
add_edge(country_RU, country_MN);
add_edge(country_RU, country_NO);
add_edge(country_RU, country_PL);
add_edge(country_RU, country_UA);
add_edge(country_RW, country_BI);
add_edge(country_RW, country_CD);
add_edge(country_RW, country_TZ);
add_edge(country_RW, country_UG);
add_edge(country_SA, country_IQ);
add_edge(country_SA, country_JO);
add_edge(country_SA, country_KW);
add_edge(country_SA, country_OM);
add_edge(country_SA, country_QA);
add_edge(country_SA, country_AE);
add_edge(country_SA, country_YE);
add_edge(country_SD, country_CF);
add_edge(country_SD, country_TD);
add_edge(country_SD, country_EG);
add_edge(country_SD, country_ET);
add_edge(country_SD, country_ER);
add_edge(country_SD, country_LY);
add_edge(country_SD, country_SS);
add_edge(country_SE, country_FI);
add_edge(country_SE, country_NO);
add_edge(country_SI, country_AT);
add_edge(country_SI, country_HR);
add_edge(country_SI, country_HU);
add_edge(country_SI, country_IT);
add_edge(country_SK, country_AT);
add_edge(country_SK, country_CZ);
add_edge(country_SK, country_HU);
add_edge(country_SK, country_PL);
add_edge(country_SK, country_UA);
add_edge(country_SL, country_GN);
add_edge(country_SL, country_LR);
add_edge(country_SM, country_IT);
add_edge(country_SN, country_GM);
add_edge(country_SN, country_GN);
add_edge(country_SN, country_GW);
add_edge(country_SN, country_ML);
add_edge(country_SN, country_MR);
add_edge(country_SO, country_DJ);
add_edge(country_SO, country_ET);
add_edge(country_SO, country_KE);
add_edge(country_SR, country_BR);
add_edge(country_SR, country_GF);
add_edge(country_SR, country_GY);
add_edge(country_SS, country_CF);
add_edge(country_SS, country_CD);
add_edge(country_SS, country_ET);
add_edge(country_SS, country_KE);
add_edge(country_SS, country_SD);
add_edge(country_SS, country_UG);
add_edge(country_SV, country_GT);
add_edge(country_SV, country_HN);
add_edge(country_SX, country_MF);
add_edge(country_SY, country_IQ);
add_edge(country_SY, country_IL);
add_edge(country_SY, country_JO);
add_edge(country_SY, country_LB);
add_edge(country_SY, country_TR);
add_edge(country_SZ, country_MZ);
add_edge(country_SZ, country_ZA);
add_edge(country_TD, country_CM);
add_edge(country_TD, country_CF);
add_edge(country_TD, country_LY);
add_edge(country_TD, country_NE);
add_edge(country_TD, country_NG);
add_edge(country_TD, country_SD);
add_edge(country_TG, country_BJ);
add_edge(country_TG, country_BF);
add_edge(country_TG, country_GH);
add_edge(country_TH, country_KH);
add_edge(country_TH, country_LA);
add_edge(country_TH, country_MY);
add_edge(country_TH, country_MM);
add_edge(country_TJ, country_AF);
add_edge(country_TJ, country_CN);
add_edge(country_TJ, country_KG);
add_edge(country_TJ, country_UZ);
add_edge(country_TL, country_ID);
add_edge(country_TM, country_AF);
add_edge(country_TM, country_IR);
add_edge(country_TM, country_KZ);
add_edge(country_TM, country_UZ);
add_edge(country_TN, country_DZ);
add_edge(country_TN, country_LY);
add_edge(country_TR, country_AM);
add_edge(country_TR, country_AZ);
add_edge(country_TR, country_BG);
add_edge(country_TR, country_GE);
add_edge(country_TR, country_GR);
add_edge(country_TR, country_IR);
add_edge(country_TR, country_IQ);
add_edge(country_TR, country_SY);
add_edge(country_TZ, country_BI);
add_edge(country_TZ, country_CD);
add_edge(country_TZ, country_KE);
add_edge(country_TZ, country_MW);
add_edge(country_TZ, country_MZ);
add_edge(country_TZ, country_RW);
add_edge(country_TZ, country_UG);
add_edge(country_TZ, country_ZM);
add_edge(country_UA, country_BY);
add_edge(country_UA, country_HU);
add_edge(country_UA, country_MD);
add_edge(country_UA, country_PL);
add_edge(country_UA, country_RO);
add_edge(country_UA, country_RU);
add_edge(country_UA, country_SK);
add_edge(country_UG, country_CD);
add_edge(country_UG, country_KE);
add_edge(country_UG, country_RW);
add_edge(country_UG, country_SS);
add_edge(country_UG, country_TZ);
add_edge(country_US, country_CA);
add_edge(country_US, country_MX);
add_edge(country_UY, country_AR);
add_edge(country_UY, country_BR);
add_edge(country_UZ, country_AF);
add_edge(country_UZ, country_KZ);
add_edge(country_UZ, country_KG);
add_edge(country_UZ, country_TJ);
add_edge(country_UZ, country_TM);
add_edge(country_VA, country_IT);
add_edge(country_VE, country_BR);
add_edge(country_VE, country_CO);
add_edge(country_VE, country_GY);
add_edge(country_VN, country_KH);
add_edge(country_VN, country_CN);
add_edge(country_VN, country_LA);
add_edge(country_YE, country_OM);
add_edge(country_YE, country_SA);
add_edge(country_ZA, country_BW);
add_edge(country_ZA, country_LS);
add_edge(country_ZA, country_MZ);
add_edge(country_ZA, country_NA);
add_edge(country_ZA, country_SZ);
add_edge(country_ZA, country_ZW);
add_edge(country_ZM, country_AO);
add_edge(country_ZM, country_BW);
add_edge(country_ZM, country_CD);
add_edge(country_ZM, country_MW);
add_edge(country_ZM, country_MZ);
add_edge(country_ZM, country_NA);
add_edge(country_ZM, country_TZ);
add_edge(country_ZM, country_ZW);
add_edge(country_ZW, country_BW);
add_edge(country_ZW, country_MZ);
add_edge(country_ZW, country_ZA);
add_edge(country_ZW, country_ZM);
free(AF_name);
free(AL_name);
free(DZ_name);
free(AD_name);
free(AO_name);
free(AR_name);
free(AM_name);
free(AT_name);
free(AZ_name);
free(BD_name);
free(BY_name);
free(BE_name);
free(BZ_name);
free(BJ_name);
free(BT_name);
free(BO_name);
free(BA_name);
free(BW_name);
free(BR_name);
free(BN_name);
free(BG_name);
free(BF_name);
free(BI_name);
free(KH_name);
free(CM_name);
free(CA_name);
free(CF_name);
free(TD_name);
free(CL_name);
free(CN_name);
free(CO_name);
free(CG_name);
free(CD_name);
free(CR_name);
free(CI_name);
free(HR_name);
free(CZ_name);
free(DK_name);
free(DJ_name);
free(DO_name);
free(EC_name);
free(EG_name);
free(SV_name);
free(GQ_name);
free(ER_name);
free(EE_name);
free(SZ_name);
free(ET_name);
free(FI_name);
free(FR_name);
free(GF_name);
free(GA_name);
free(GM_name);
free(GE_name);
free(DE_name);
free(GH_name);
free(GI_name);
free(GR_name);
free(GT_name);
free(GN_name);
free(GW_name);
free(GY_name);
free(HT_name);
free(VA_name);
free(HN_name);
free(HK_name);
free(HU_name);
free(IN_name);
free(ID_name);
free(IR_name);
free(IQ_name);
free(IE_name);
free(IL_name);
free(IT_name);
free(JO_name);
free(KZ_name);
free(KE_name);
free(KP_name);
free(KR_name);
free(KW_name);
free(KG_name);
free(LA_name);
free(LV_name);
free(LB_name);
free(LS_name);
free(LR_name);
free(LY_name);
free(LI_name);
free(LT_name);
free(LU_name);
free(MO_name);
free(MW_name);
free(MY_name);
free(ML_name);
free(MR_name);
free(MX_name);
free(MD_name);
free(MC_name);
free(MN_name);
free(ME_name);
free(MA_name);
free(MZ_name);
free(MM_name);
free(NA_name);
free(NP_name);
free(NL_name);
free(NI_name);
free(NE_name);
free(NG_name);
free(MK_name);
free(NO_name);
free(OM_name);
free(PK_name);
free(PS_name);
free(PA_name);
free(PG_name);
free(PY_name);
free(PE_name);
free(PL_name);
free(PT_name);
free(QA_name);
free(RO_name);
free(RU_name);
free(RW_name);
free(MF_name);
free(SM_name);
free(SA_name);
free(SN_name);
free(RS_name);
free(SL_name);
free(SX_name);
free(SK_name);
free(SI_name);
free(SO_name);
free(ZA_name);
free(SS_name);
free(ES_name);
free(SD_name);
free(SR_name);
free(SE_name);
free(CH_name);
free(SY_name);
free(TW_name);
free(TJ_name);
free(TZ_name);
free(TH_name);
free(TL_name);
free(TG_name);
free(TN_name);
free(TR_name);
free(TM_name);
free(UG_name);
free(UA_name);
free(AE_name);
free(GB_name);
free(US_name);
free(UM_name);
free(UY_name);
free(UZ_name);
free(VE_name);
free(VN_name);
free(EH_name);
free(YE_name);
free(ZM_name);
free(ZW_name);
free(AF_alpha2);
free(AL_alpha2);
free(DZ_alpha2);
free(AD_alpha2);
free(AO_alpha2);
free(AR_alpha2);
free(AM_alpha2);
free(AT_alpha2);
free(AZ_alpha2);
free(BD_alpha2);
free(BY_alpha2);
free(BE_alpha2);
free(BZ_alpha2);
free(BJ_alpha2);
free(BT_alpha2);
free(BO_alpha2);
free(BA_alpha2);
free(BW_alpha2);
free(BR_alpha2);
free(BN_alpha2);
free(BG_alpha2);
free(BF_alpha2);
free(BI_alpha2);
free(KH_alpha2);
free(CM_alpha2);
free(CA_alpha2);
free(CF_alpha2);
free(TD_alpha2);
free(CL_alpha2);
free(CN_alpha2);
free(CO_alpha2);
free(CG_alpha2);
free(CD_alpha2);
free(CR_alpha2);
free(CI_alpha2);
free(HR_alpha2);
free(CZ_alpha2);
free(DK_alpha2);
free(DJ_alpha2);
free(DO_alpha2);
free(EC_alpha2);
free(EG_alpha2);
free(SV_alpha2);
free(GQ_alpha2);
free(ER_alpha2);
free(EE_alpha2);
free(SZ_alpha2);
free(ET_alpha2);
free(FI_alpha2);
free(FR_alpha2);
free(GF_alpha2);
free(GA_alpha2);
free(GM_alpha2);
free(GE_alpha2);
free(DE_alpha2);
free(GH_alpha2);
free(GI_alpha2);
free(GR_alpha2);
free(GT_alpha2);
free(GN_alpha2);
free(GW_alpha2);
free(GY_alpha2);
free(HT_alpha2);
free(VA_alpha2);
free(HN_alpha2);
free(HK_alpha2);
free(HU_alpha2);
free(IN_alpha2);
free(ID_alpha2);
free(IR_alpha2);
free(IQ_alpha2);
free(IE_alpha2);
free(IL_alpha2);
free(IT_alpha2);
free(JO_alpha2);
free(KZ_alpha2);
free(KE_alpha2);
free(KP_alpha2);
free(KR_alpha2);
free(KW_alpha2);
free(KG_alpha2);
free(LA_alpha2);
free(LV_alpha2);
free(LB_alpha2);
free(LS_alpha2);
free(LR_alpha2);
free(LY_alpha2);
free(LI_alpha2);
free(LT_alpha2);
free(LU_alpha2);
free(MO_alpha2);
free(MW_alpha2);
free(MY_alpha2);
free(ML_alpha2);
free(MR_alpha2);
free(MX_alpha2);
free(MD_alpha2);
free(MC_alpha2);
free(MN_alpha2);
free(ME_alpha2);
free(MA_alpha2);
free(MZ_alpha2);
free(MM_alpha2);
free(NA_alpha2);
free(NP_alpha2);
free(NL_alpha2);
free(NI_alpha2);
free(NE_alpha2);
free(NG_alpha2);
free(MK_alpha2);
free(NO_alpha2);
free(OM_alpha2);
free(PK_alpha2);
free(PS_alpha2);
free(PA_alpha2);
free(PG_alpha2);
free(PY_alpha2);
free(PE_alpha2);
free(PL_alpha2);
free(PT_alpha2);
free(QA_alpha2);
free(RO_alpha2);
free(RU_alpha2);
free(RW_alpha2);
free(MF_alpha2);
free(SM_alpha2);
free(SA_alpha2);
free(SN_alpha2);
free(RS_alpha2);
free(SL_alpha2);
free(SX_alpha2);
free(SK_alpha2);
free(SI_alpha2);
free(SO_alpha2);
free(ZA_alpha2);
free(SS_alpha2);
free(ES_alpha2);
free(SD_alpha2);
free(SR_alpha2);
free(SE_alpha2);
free(CH_alpha2);
free(SY_alpha2);
free(TW_alpha2);
free(TJ_alpha2);
free(TZ_alpha2);
free(TH_alpha2);
free(TL_alpha2);
free(TG_alpha2);
free(TN_alpha2);
free(TR_alpha2);
free(TM_alpha2);
free(UG_alpha2);
free(UA_alpha2);
free(AE_alpha2);
free(GB_alpha2);
free(US_alpha2);
free(UM_alpha2);
free(UY_alpha2);
free(UZ_alpha2);
free(VE_alpha2);
free(VN_alpha2);
free(EH_alpha2);
free(YE_alpha2);
free(ZM_alpha2);
free(ZW_alpha2);
